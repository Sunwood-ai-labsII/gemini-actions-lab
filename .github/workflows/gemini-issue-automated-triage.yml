name: 'üè∑Ô∏è Gemini Automated Issue Triage'

on:
  issues:
    types: [opened, reopened]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'issue number to triage'
        required: true
        type: 'number'

permissions:
  contents: read
  issues: write
  id-token: write

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - name: 'Get Issue Info'
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            let issue;
            if (context.eventName === 'workflow_dispatch') {
              const { data } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.inputs.issue_number }}
              });
              issue = data;
            } else {
              issue = context.payload.issue;
            }
            
            core.setOutput('number', issue.number);
            core.setOutput('title', issue.title);
            core.setOutput('body', issue.body || '');

      - name: 'Get Labels'
        id: labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = await github.paginate(github.rest.issues.listLabelsForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const labelNames = labels.map(l => l.name).join(', ');
            core.setOutput('available', labelNames);
            return labelNames;

      - name: 'Analyze with Gemini'
        uses: google-github-actions/run-gemini-cli@v0
        id: gemini
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            Issue Title: ${{ steps.issue.outputs.title }}
            Issue Body: ${{ steps.issue.outputs.body }}
            Available Labels: ${{ steps.labels.outputs.available }}
            
            Select appropriate labels for this GitHub issue. Use this XML format:
            <labels>
            <label>example</label>
            <label>kind/task</label>
            </labels>

      - name: 'Apply Labels'
        env:
          GEMINI_OUTPUT: ${{ steps.gemini.outputs.summary }}
          ISSUE_NUMBER: ${{ steps.issue.outputs.number }}
        uses: actions/github-script@v7
        with:
          script: |
            const output = process.env.GEMINI_OUTPUT;
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);
            
            console.log('Gemini output:', output);
            
            let labels = [];
            
            // XML„Çø„Ç∞„Åã„ÇâÊ≠£Ë¶èË°®Áèæ„Åß„É©„Éô„É´„ÇíÊäΩÂá∫
            const labelMatches = output.match(/<label>(.*?)<\/label>/g);
            if (labelMatches) {
              labels = labelMatches.map(match => 
                match.replace(/<\/?label>/g, '').trim()
              ).filter(label => label.length > 0);
              console.log('Extracted labels from XML:', labels);
            } else {
              console.log('No XML labels found, using fallback');
            }
            
            // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ: needs-triage „ÅÆ„Åø
            if (labels.length === 0) {
              console.log('No labels extracted, applying needs-triage');
              labels = ['needs-triage'];
            }
            
            // „É©„Éô„É´ÈÅ©Áî®
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: labels
              });
              console.log(`Applied labels: ${labels.join(', ')}`);
            }
