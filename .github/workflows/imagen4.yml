name: imagen4-commit-via-gemini-cli

on:
  workflow_dispatch:
    inputs:
      image_prompt:
        description: "作りたい画像のプロンプト"
        required: true
      model:
        description: "画像生成モデル (imagen-4 / imagen-4-ultra / imagen-3)"
        default: "imagen-4"
      num:
        description: "生成枚数 (1-4)"
        default: "1"
      aspect_ratio:
        description: "アスペクト比 (例: 1:1, 16:9, 9:16, 3:4, 4:3)"
        default: "1:1"
      seed:
        description: "固定シード（任意）"
        required: false

permissions:
  contents: write

jobs:
  generate_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Generate images via Gemini CLI (+ Imagen MCP)
        uses: google-github-actions/run-gemini-cli@v0
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          gemini_model: gemini-2.5-flash
          gemini_cli_version: latest
          gemini_debug: true
          settings: |
            {
              "mcpServers": {
                "gemini-imagen": {
                  "command": "npx",
                  "args": ["-y", "gemini-imagen-mcp-server",
                           "--output-dir", "generated-images",
                           "--model", "${{ github.event.inputs.model }}"],
                  "env": { "GEMINI_API_KEY": "${{ secrets.GEMINI_API_KEY }}" },
                  "trust": true,
                  "includeTools": ["generate_image"]
                }
              }
            }
          prompt: |
            Use the @gemini-imagen.generate_image tool to generate ${{ github.event.inputs.num }} image(s)
            from this prompt: "${{ github.event.inputs.image_prompt }}".
            Use aspect ratio "${{ github.event.inputs.aspect_ratio }}".
            If "seed" is provided, use it: "${{ github.event.inputs.seed || '' }}".
            Save files under ./generated-images and list only the filenames.

      - name: Verify outputs
        shell: bash
        run: |
          set -euo pipefail
          test -d generated-images || { echo "generated-images not found"; exit 1; }
          echo "== Generated files =="
          ls -lh generated-images
          cnt=$(ls -1 generated-images | wc -l)
          if [ "$cnt" -lt 1 ]; then
            echo "No images were generated"; exit 1
          fi

      - name: Commit directly to branch
        shell: bash
        env:
          GH_USER_NAME: github-actions[bot]
          GH_USER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -euo pipefail

          DATE_UTC=$(date -u +%Y%m%d)
          DEST="assets/imagen4/${DATE_UTC}-${{ github.run_id }}"
          mkdir -p "$DEST"

          cp -v generated-images/* "$DEST"/

          cat > "$DEST/index.json" <<'EOF'
          {
            "repo": "${{ github.repository }}",
            "run_id": "${{ github.run_id }}",
            "run_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "workflow": "${{ github.workflow }}",
            "prompt": "${{ github.event.inputs.image_prompt || '' }}",
            "model": "${{ github.event.inputs.model || '' }}",
            "aspect_ratio": "${{ github.event.inputs.aspect_ratio || '' }}",
            "num": "${{ github.event.inputs.num || '' }}",
            "seed": "${{ github.event.inputs.seed || '' }}",
            "timestamp_utc": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF

          git config user.name  "$GH_USER_NAME"
          git config user.email "$GH_USER_EMAIL"
          git add "$DEST"

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(images): add Imagen outputs for run ${{ github.run_id }}"
          git push origin HEAD:${{ github.ref_name }}

      - name: Show saved path
        shell: bash
        run: echo "Saved to: assets/imagen4/${{ github.run_id }}"
